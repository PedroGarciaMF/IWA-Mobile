name: "FoD App and Release Name"
description: "Set the Fortify on Demand App and Release Name based on branch/PR and overrides"
inputs:
  working-directory:
    required: false
    description: "Relative directory (from root of repository) from where to run commands"
    default: "."
  default-fod-app-name:
    required: false
    default: ${{ github.action_repository }}
    description: "Default FoD Application Name"
  defaut-fod-release-name:
    required: false
    default: ${{ github.action_ref }}
    description: "Default FoD Release Name"
  app-name-postfix:
    required: false
    description: "Additional string to append to App Name to make it unique for a user"
    default: ""
outputs:
  fod-app-name:
    description: "FoD Application Name"
    value: ${{ steps.set_fod_app_name.outputs.appname }}
  fod-release-name:
    description: "FoD Release Name"
    value: ${{ steps.extract_branch.outputs.branch }}
runs:
  using: "composite"
  steps:
    # TODO: do we need the following?
    # Checkout the code
    - name: Checkout
      uses: actions/checkout@v3.3.0
      with:
        # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
        fetch-depth: 2
    # If this run was triggered by a pull request event, then checkout the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      shell: bash
      if: ${{ github.event_name == 'pull_request' }}
    # set the FOD_APP_NAME environment variable to be used throughout the workflow
    - name: Set FoD app name
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        if [[ -z "$APP_NAME_POSTFIX" ]]; then
          echo "::debug::Setting: '$DEFAULT_APP_NAME'"
          echo "$DEFAULT_APP_NAME" >> $GITHUB_OUTPUT
        else
          echo "::debug::Setting: '$OVERRIDE_APP_NAME'"
          echo "$OVERRIDE_APP_NAME" >> $GITHUB_OUTPUT
        fi
      env:
        APP_NAME_POSTFIX: ${{ inputs.app-name-postfix }}
        DEFAULT_APP_NAME: ${{ format('{0}={1}', 'appname', inputs.default-fod-app-name) }}
        OVERRIDE_APP_NAME: ${{ format('{0}={1} {2}', 'appname', inputs.default-fod-app-name, inputs.app-name-postfix) }}
        id: set_fod_app_name
    # Get the branch name or pr number
    - name: Extract branch name
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        if [[ $GITHUB_REF == *"refs/pull/"* ]]; then
          BRANCH_NAME="$(echo ${GITHUB_REF#refs/pull/})"
          PR_NUMBER="$(echo ${BRANCH_NAME%/merge})"
          BRANCH_NAME="[PR]${SOURCE_BRANCH}#${PR_NUMBER}"
        else
          BRANCH_NAME="$(echo ${GITHUB_REF#refs/heads/})"
        fi
        echo "::debug::branch=${BRANCH_NAME}"         
        echo "branch=${BRANCH_NAME}" >> $GITHUB_OUTPUT
      env:
        SOURCE_BRANCH: ${{ github.head_ref }}
      id: extract_branch

