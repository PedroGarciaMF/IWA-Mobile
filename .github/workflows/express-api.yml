

# Create GitHub Action Repository Variables for your version of the application:
#   FOD_BASE_URL should be FoD BASE URL for your tenant (e.g. https://emea.fortify.com)
#   FOD_API_URI should be FoD API URI for your tenant (e.g. https://api.emea,fortify.com)
#   FOD_PARENT_RELEASE_NAME is the FoD release name corresponding to the parent branch of any newly created branch, this is typically "main"
# Create GitHub Action Secrets for your version of the application:
#   FOD_CLIENT_ID should be an API Key obtained from your FoD tenant.
#   FOD_CLIENT_SECRET should be the secret for the API Key obtained for your FoD tenant.
# Helpful hints:
#   API Key credentials can be obtained from your FoD tenant, under Administration -> Settings -> API
#   It is recommended to create credentials with 'Security Lead' Role selected.
#   "Automated Audit preference" should be configured for the release's Static Scan Settings.

name: Express API CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths:
      - '02-express-api/**'
    branches:
      - '**'        # matches every branch
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runFoDSASTScan:
        description: 'Carry out SAST scan using Fortify on Demand'
        required: false
        default: 'true'
      runFoDDASTScan:
        description: 'Carry out DAST API scan using Fortify on Demand'
        required: false
        default: 'false'

# Global environment variables
env:
  BASE_DIR: "./02-express-api"
  DEFAULT_APP_NAME: "IWA-API"
  SCANCENTRAL_VER: "23.1.0"

jobs:

  Build-And-Test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      # If this run was triggered by a pull request event, then checkout the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      # Install appropriate version of Node.Js
      # and install project dependencies from npm
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Dependencies
        working-directory: ${{ env.BASE_DIR }}
        run: npm install --only=prod

      # TODO: run unit tests

  FoD-SAST-Scan:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || (github.event.inputs.runFoDSASTScan == 'true') }}
    needs: [ Build-And-Test ]

    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      # If this run was triggered by a pull request event, then checkout the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
      - name: FoD App and Release Name
        id: fod-app-and-rel-name
        uses: ./.github/actions/fod-app-and-release-name
        with:
          default_fod_app_name: ${{ env.DEFAULT_APP_NAME }}
          default_fod_release_name: 'main'
          app_name_postfix: ${{ vars.FOD_APP_NAME_POSTFIX }}
      - name: Node FoD SAST scan
        id: node-fod-sast-scan
        uses: ./.github/actions/node-fod-sast-scan
        with:
          working_directory: ${{ env.BASE_DIR }}
          fod_api_uri: ${{ vars.FOD_API_URI }}
          fod_client_id: ${{ secrets.FOD_CLIENT_ID }}
          fod_client_secret: ${{ secrets.FOD_CLIENT_SECRET }}
          fod_app_name: ${{ steps.fod-app-and-rel-name.outputs.app_name }}
          fod_release_name: ${{ steps.fod-app-and-rel-name.outputs.release_name }}
      - name: Outputs Summary
        shell: bash
        run: |
          echo "### FoD - output variables" >> $GITHUB_STEP_SUMMARY
          echo "| Variable         | Value       |" >> $GITHUB_STEP_SUMMARY
          echo "| ---------------- | ----------- |" >> $GITHUB_STEP_SUMMARY
          echo "| fod_app_name     | $APP_NAME   |" >> $GITHUB_STEP_SUMMARY
          echo "| fod_release_name | $REL_NAME   |" >> $GITHUB_STEP_SUMMARY
          echo "| fod_scan_id      | $SCAN_ID   |" >> $GITHUB_STEP_SUMMARY
        env:
          APP_NAME: ${{ steps.fod-app-and-rel-name.outputs.app_name }}
          REL_NAME: ${{ steps.fod-app-and-rel-name.outputs.release_name }}
          SCAN_ID:  ${{ steps.node-fod-sast-scan.outputs.scan_id }}

  FoD-DAST-Scan:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || (github.event.inputs.runFoDDASTScan == 'true') }}
    needs: [ Build-And-Test, FoD-SAST-Scan ]

    steps:
      - name: Check Out Source Code
        uses: actions/checkout@v3.3.0

      # set the FOD_APP_NAME environment variable to be used throughout the workflow
      - name: Set FoD app name
        working-directory: ${{ env.BASE_DIR }}
        shell: bash
        run: |
          if [[ -z "$APP_NAME_OVERRIDE" ]]; then
            echo "::debug::Setting FOD_APP_NAME environment variable to default: '$DEFAULT_APP_NAME'"
            echo "$DEFAULT_FOD_APP_NAME" >> $GITHUB_ENV
          else
            echo "::debug::Setting FOD_APP_NAME to override: '$DEFAULT_APP_NAME $APP_NAME_OVERRIDE'"
            echo "$OVERRIDE_FOD_APP_NAME" >> $GITHUB_ENV
          fi
        env:
          APP_NAME_OVERRIDE: ${{ vars.FOD_APP_NAME_POSTFIX }}
          DEFAULT_FOD_APP_NAME:  ${{ format('{0}={1}', 'FOD_APP_NAME', env.DEFAULT_APP_NAME) }}
          OVERRIDE_FOD_APP_NAME: ${{ format('{0}={1}', 'FOD_APP_NAME', env.APP_NAME_OVERRIDE) }}
        id: set_fod_app_name

      # Get the branch name or pr number
      - name: Extract branch name
        working-directory: ${{ env.BASE_DIR }}
        shell: bash
        run: |
          if [[ $GITHUB_REF == *"refs/pull/"* ]]; then
            BRANCH_NAME="$(echo ${GITHUB_REF#refs/pull/})"
            PR_NUMBER="$(echo ${BRANCH_NAME%/merge})"
            BRANCH_NAME="[PR]${SOURCE_BRANCH}#${PR_NUMBER}"
          else
            BRANCH_NAME="$(echo ${GITHUB_REF#refs/heads/})"
          fi
          echo "::debug::branch=${BRANCH_NAME}"         
          echo "branch=${BRANCH_NAME}" >> $GITHUB_OUTPUT
        env:
          SOURCE_BRANCH: ${{ github.head_ref }}
        id: extract_branch

      # TODO: start DAST API scan

  Security-Gate:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ FoD-SAST-Scan, FoD-DAST-Scan ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check Out Source Code
        uses: actions/checkout@v3.3.0

      # set the FOD_APP_NAME environment variable to be used throughout the workflow
      #- name: Set FoD app name
      #  working-directory: ${{ env.BASE_DIR }}
      #  shell: bash
      #  run: |
      #    if [[ -z "$APP_NAME_OVERRIDE" ]]; then
      #      echo "::debug::Setting FOD_APP_NAME environment variable to default: '$DEFAULT_APP_NAME'"
      #      echo "$DEFAULT_FOD_APP_NAME" >> $GITHUB_ENV
      #    else
      #      echo "::debug::Setting FOD_APP_NAME to override: '$DEFAULT_APP_NAME $APP_NAME_OVERRIDE'"
      #      echo "$OVERRIDE_FOD_APP_NAME" >> $GITHUB_ENV
      #    fi
      #  env:
      #    APP_NAME_OVERRIDE: ${{ vars.FOD_APP_NAME_POSTFIX }}
      #    DEFAULT_FOD_APP_NAME:  ${{ format('{0}={1}', 'FOD_APP_NAME', env.DEFAULT_APP_NAME) }}
      #    OVERRIDE_FOD_APP_NAME: ${{ format('{0}={1}', 'FOD_APP_NAME', env.APP_NAME_OVERRIDE) }}
      #  id: set_fod_app_name

      # Get the branch name or pr number
      #- name: Extract branch name
      #  working-directory: ${{ env.BASE_DIR }}
      #  shell: bash
      #  run: |
      #    if [[ $GITHUB_REF == *"refs/pull/"* ]]; then
      #      BRANCH_NAME="$(echo ${GITHUB_REF#refs/pull/})"
      #      PR_NUMBER="$(echo ${BRANCH_NAME%/merge})"
      #      BRANCH_NAME="[PR]${SOURCE_BRANCH}#${PR_NUMBER}"
      #    else
      #      BRANCH_NAME="$(echo ${GITHUB_REF#refs/heads/})"
      #    fi
      #    echo "::debug::branch=${BRANCH_NAME}"
      #    echo "branch=${BRANCH_NAME}" >> $GITHUB_OUTPUT
      #  env:
      #    SOURCE_BRANCH: ${{ github.head_ref }}
      #  id: extract_branch

      - name: Verify FoD Security Policy
        uses: ./.github/actions/verify-fod-security-policy
        with:
          fod_api_uri: ${{ vars.FOD_API_URI }}
          fod_client_id: ${{ secrets.FOD_CLIENT_ID }}
          fod_client_secret: ${{ secrets.FOD_CLIENT_SECRET }}
          fod_app_name: ${{ steps.fod-app-and-rel-name.outputs.app_name }}
          fod_release_name: ${{ steps.fod-app-and-rel-name.outputs.release_name }}
